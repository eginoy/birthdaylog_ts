React useEffect参考
https://reffect.co.jp/react/react-useeffect-understanding

Recoil(GlobalState管理)
https://recoiljs.org/docs/basic-tutorial/atoms
Recoil example
https://github.com/chetanraj/react-recoil-example
Recoil 基本的な使い方
https://qiita.com/serinuntius/items/3d6519988233d7ba643c

Router Guard
https://www.tuckerblackwell.com/handle-auth-with-react-router-and-typescript/

CSS in JS
https://www.i-ryo.com/entry/2020/12/16/052128
https://akabeko.me/blog/2020/11/styled-components/

aタグのユーザーエージェントスタイル上書き
https://www.366service.com/jp/qa/5bb8b0bd7ede8b67b1b3f610dfaabe35

material-ui
material-ui theme設定
https://qiita.com/tag1216/items/2935c9979b857bb7701f
themeカラー
https://colorhunt.co/palette/17117

styled-componentsでのmaterial-ui component スタイル上書き
https://qiita.com/Ouvill/items/c6761c32d31ffb11e114#material-ui-%E3%81%A8-styled-components-%E3%82%92%E4%B8%80%E7%B7%92%E3%81%AB%E4%BD%BF%E3%81%86

Storybook(UI開発ツール)
https://www.learnstorybook.com/intro-to-storybook/react/ja/get-started/
Storybook参考
https://dev.classmethod.jp/articles/rnfw-storybook/


Reset CSS
https://github.com/zacanger/styled-reset

以下react native本 参考ページ
カラー設定説明 P.419
Atomic Design粒度 P.413


styled componentでmaterial-uiの既存スタイルに負けてしまいオーバーライドできないときの対処
//material-uiの元のbackground-colorに負けてボタンのbackground-colorが上書きできない
const ThemeButton = styled(Button)`
    background-color:${props => props.theme.palette.secondary.main};
    background-color: ${props => props.theme.palette.secondary.light}
`
const StyledButton: React.FC<Props> = () => {
    return(
        <ThemeButton onClick={onClick}>
            {label}
        </ThemeButton>
    )
}
//ThemeButtonにclassNameを指定して、詳細度を上げることで上書きすることができた。
const ThemeButton = styled(Button)`
    &.styled{
        background-color:${props => props.theme.palette.secondary.main};
    }
    &.styled:hover{
        background-color: ${props => props.theme.palette.secondary.light}
    }
`
const StyledButton: React.FC<Props> = ({label,onClick}) => {
    return(
        <ThemeButton className="styled" onClick={onClick}>
            {label}
        </ThemeButton>
    )
}